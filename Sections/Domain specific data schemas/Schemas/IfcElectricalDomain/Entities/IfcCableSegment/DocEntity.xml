<?xml version="1.0" encoding="utf-8"?>
<DocEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="IfcCableSegment" Name="IfcCableSegment" UniqueId="a16f4db3-e5ef-49a6-98e0-f7c2116a5580" BaseDefinition="IfcFlowSegment" EntityFlags="229">
	<Localization>
		<DocLocalization Locale="de" Name="Kabelsegment" />
		<DocLocalization Locale="en" Name="Cable Segment" />
		<DocLocalization Locale="fr" Name="Segment de câble" />
	</Localization>
	<Attributes>
		<DocAttribute Name="PredefinedType" UniqueId="26d7b3aa-772a-4113-97d7-0c30b212a00a" DefinedType="IfcCableSegmentTypeEnum" AttributeFlags="1">
			<Documentation>Identifies the predefined types of cable segment from which the type required may be set.</Documentation>
		</DocAttribute>
	</Attributes>
	<WhereRules>
		<DocWhereRule Name="CorrectPredefinedType" UniqueId="66b89b7b-41ea-4a8c-8cf8-bfb93bc7e118">
			<Documentation>Either the _PredefinedType_ attribute is unset (e.g. because an _IfcCableSegmentType_ is associated), or the inherited attribute _ObjectType_ shall be provided, if the _PredefinedType_ is set to USERDEFINED.</Documentation>
			<Expression>NOT(EXISTS(PredefinedType)) OR 
 (PredefinedType &lt;&gt; IfcCableSegmentTypeEnum.USERDEFINED) OR 
 ((PredefinedType = IfcCableSegmentTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType))</Expression>
		</DocWhereRule>
		<DocWhereRule Name="CorrectTypeAssigned" UniqueId="3149bfe2-c0c1-4a93-8cda-25d6501c4022">
			<Documentation>Either there is no cable segment type object associated, i.e. the _IsTypedBy_ inverse relationship is not provided, or the associated type object has to be of type _IfcCableSegmentType_.</Documentation>
			<Expression>(SIZEOF(IsTypedBy) = 0) OR 
  (&apos;IFCELECTRICALDOMAIN.IFCCABLESEGMENTTYPE&apos; IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType))</Expression>
		</DocWhereRule>
	</WhereRules>
</DocEntity>

