<?xml version="1.0" encoding="utf-8"?>
<DocEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="IfcRoof" Name="IfcRoof" UniqueId="54499bfa-3796-45d8-870a-1357fd0e960f" Status="H" BaseDefinition="IfcBuildingElement" EntityFlags="109">
	<Localization>
		<DocLocalization Locale="de" Name="Dach" />
		<DocLocalization Locale="en" Name="Roof" />
		<DocLocalization Locale="fr" Name="Toiture" />
	</Localization>
	<Attributes>
		<DocAttribute Name="PredefinedType" UniqueId="27e57560-ff44-4946-bf77-d8f1d8bdc50a" DefinedType="IfcRoofTypeEnum" AttributeFlags="1">
			<Documentation>Predefined generic types for a roof that are specified in an enumeration. There may be a property set given for the predefined types.
&gt; NOTE&amp;nbsp; The _PredefinedType_ shall only be used, if no _IfcRoofType_ is assigned, providing its own _IfcRoofType.PredefinedType_.

{ .change-ifc2x4}
&gt; IFC4 CHANGE The attribute has been renamed from ShapeType and changed to be OPTIONAL with upward compatibility for file based exchange.</Documentation>
		</DocAttribute>
	</Attributes>
	<WhereRules>
		<DocWhereRule Name="CorrectPredefinedType" UniqueId="7546ff83-bb5b-4599-8707-1c5401bb7b7a">
			<Documentation>Either the _PredefinedType_ attribute is unset (e.g. because an _IfcRoofType_ is associated), or the inherited attribute _ObjectType_ shall be provided, if the _PredefinedType_ is set to USERDEFINED.</Documentation>
			<Expression>NOT(EXISTS(PredefinedType)) OR
 (PredefinedType &lt;&gt; IfcRoofTypeEnum.USERDEFINED) OR
 ((PredefinedType = IfcRoofTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType))</Expression>
		</DocWhereRule>
		<DocWhereRule Name="CorrectTypeAssigned" UniqueId="90d9ca6b-d032-4aba-a51c-458d4e9ebb36">
			<Documentation>Either there is no roof type object associated, i.e. the _IsTypedBy_ inverse relationship is not provided, or the associated type object has to be of type _IfcRoofType_.</Documentation>
			<Expression>(SIZEOF(IsTypedBy) = 0) OR
  (&apos;IFCSHAREDBLDGELEMENTS.IFCROOFTYPE&apos; IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType))</Expression>
		</DocWhereRule>
	</WhereRules>
</DocEntity>

